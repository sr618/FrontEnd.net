  @model proj0.Models.LoginModel
  <!--------------- login-section --------------->
<section class="login footer-padding">
    <div class="container">
        <div class="login-section">
            <div class="review-form">
                <form asp-action="Indexx" asp-controller="Login">                <h5 class="comment-title">Log In</h5>
                <div class="review-inner-form ">
                    <div class="review-form-name">
                        <label for="email" class="form-label">Email Address**</label>
                        <input type="text" asp-for="UserName" id="email" class="form-control" placeholder="Email">
                    </div>
                    <div class="review-form-name">
                        <label for="password" class="form-label">Password*</label>
                        <input asp-for="Password"  type="password" id="password" class="form-control" placeholder="password">
                    </div>
                    <div class="review-form-name checkbox">
                        <div class="checkbox-item">
                            <input type="checkbox">
                            <span class="address">
                                Remember Me
                            </span>
                        </div>
                        <div class="forget-pass">
                            <p>Forgot password?</p>
                        </div>
                    </div>
                </div>
                <div class="login-btn text-center">
                    <button type="submit" class="shop-btn">Log In</button>
                    </form>
                    <span class="shop-account">
                        Dont't have an account ?<a href=@Url.Action("Register","Login")>
                            Sign Up
                            Free
                        </a>
                    </span>
                </div>
            </div>
        </div>
    </div>
</section>
<!--------------- login-section-end --------------->
@section scripts {
    <!-- Add SweetAlert script -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Display SweetAlert message if present in TempData
            var sweetAlertMessage = '@TempData["SweetAlertMessage"]';
            var sweetAlertType = '@TempData["SweetAlertType"]';

            if (sweetAlertMessage) {
                Swal.fire({
                    icon: sweetAlertType,
                    title: 'Alert',
                    html: sweetAlertMessage
                });

                // Clear TempData after displaying the message
                '@TempData.Remove("SweetAlertMessage")';
                '@TempData.Remove("SweetAlertType")';
            }

            var formAuthentication = document.getElementById('loginForm');

            if (formAuthentication) {
                formAuthentication.addEventListener('submit', function (event) {
                    // Validate form on submit
                    var isValid = validateForm();

                    if (!isValid) {
                        event.preventDefault();
                    }
                });
            }

            function validateForm() {
                var userName = document.getElementById('email').value.trim();
                var password = document.getElementById('password').value.trim();

                if (userName === '' || password === '') {
                    // Display SweetAlert for empty field validation errors
                    Swal.fire({
                        icon: 'error',
                        title: 'Validation Error',
                        text: 'Please enter both username/email and password.'
                    });
                    return false;
                }

                // Your server-side validation logic should handle incorrect values
                // For now, assuming you need to check if values are not equal to a specific incorrect value
                var incorrectValue = 'incorrect'; // Replace this with the actual incorrect value

                if (userName === incorrectValue || password === incorrectValue) {
                    // Display SweetAlert for incorrect values
                    Swal.fire({
                        icon: 'error',
                        title: 'Validation Error',
                        text: 'Invalid Username or Password'
                    });
                    return false;
                }

                return true;
            }
        });
    </script>
}

}

